@page "/register"
@using Blazored.LocalStorage
@using Microsoft.AspNetCore.Components
@using blazor_client.Contacts
@using shared.Models
@inject IApiService apiService
@inject NavigationManager Navigation

<div class="container mt-5">
    <div class="row justify-content-center">
        <div class="col-md-6">
            <div class="card">
                <div class="card-header text-center">
                    <h4>Register</h4>
                </div>
                <div class="card-body">
                    <form @onsubmit="HandleRegister">
                        <div class="mb-3">
                            <label for="legalName" class="form-label">Full Name</label>
                            <input type="text" id="legalName" class="form-control" @bind="registerRequest.LegalName" placeholder="Enter your full name" required />
                        </div>
                        <div class="mb-3">
                            <label for="email" class="form-label">Email</label>
                            <input type="email" id="email" class="form-control" @bind="registerRequest.Email" placeholder="Enter your email" required />
                        </div>
                        <div class="mb-3">
                            <label for="password" class="form-label">Password</label>
                            <input type="password" id="password" class="form-control" @bind="registerRequest.Password" placeholder="Enter your password" required />
                        </div>
                        <div class="mb-3">
                            <label for="cpr" class="form-label">CPR</label>
                            <input type="text" id="cpr" class="form-control" @bind="registerRequest.Cpr" placeholder="Enter your CPR" required />
                        </div>
                        <div class="mb-3">
                            <label for="phone" class="form-label">Phone</label>
                            <input type="tel" id="phone" class="form-control" @bind="registerRequest.Phone" placeholder="Enter your phone number" required />
                        </div>
                        <div class="d-grid">
                            <button type="submit" class="btn btn-primary" disabled="@isLoading">
                                @if (isLoading)
                                {
                                    <span class="spinner-border spinner-border-sm"></span>
                                }
                                Register
                            </button>
                        </div>
                    </form>
                </div>
                @if (errorMessage != null)
                {
                    <div class="card-footer text-danger text-center">
                        @errorMessage
                    </div>
                }
                @if (successMessage != null)
                {
                    <div class="card-footer text-success text-center">
                        @successMessage
                    </div>
                }
            </div>
        </div>
    </div>
</div>

@code {
    private CreateUserModel registerRequest = new CreateUserModel() {
        Cpr = string.Empty,
        Email = string.Empty,
        LegalName = string.Empty,
        Password = string.Empty,
        Phone = string.Empty,
    };
    private string? errorMessage;
    private string? successMessage;
    private bool isLoading = false;

    private async Task HandleRegister()
    {
        try
        {
            isLoading = true;

            // Call the API to register the user
            var response = await apiService.CreateUserAsync(registerRequest);
            if (!string.IsNullOrWhiteSpace(response))
            {
                errorMessage = response;
                isLoading = false;
                return;
            }

            // Display success message and redirect to login
            successMessage = "Registration successful! Redirecting to login...";
            await Task.Delay(2000); // Wait for 2 seconds to show the message
            Navigation.NavigateTo("/login");
        }
        catch (Exception ex)
        {
            errorMessage = "An error occurred: " + ex.Message;
        }
        finally
        {
            isLoading = false;
        }
    }
}
